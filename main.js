!function(){"use strict";const e={inputSelector:".popup__info",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__info_type_error",errorClass:"popup__error_visible"};var t=class{constructor(e,t){var s,r;r=e=>e.some((e=>!e.validity.valid)),(s="_hasInvalidInput")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._settings=e,this._formEl=t}_setEventListeners(e,t){e.forEach((s=>{s.addEventListener("input",(()=>{this._checkInputValidity(s),this._toggleButtonState(e,t)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e,t){this._hasInvalidInput(e)?t.disabled=!0:t.disabled=!1}_showInputError(e){e.classList.add(this._settings.inputErrorClass);const t=e.validationMessage,s=e.id,r=this._formEl.querySelector("#".concat(s,"-error"));r.textContent=t,r.classList.add(this._settings.errorClass)}_hideInputError(e){e.classList.remove(this._settings.inputErrorClass);const t=e.id,s=this._formEl.querySelector("#".concat(t,"-error"));s.textContent="",s.classList.remove(this._settings.errorClass)}enableValidator(){const e=[...this._formEl.querySelectorAll(this._settings.inputSelector)],t=this._formEl.querySelector(this._settings.submitButtonSelector);this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(e,t)}resetValidation(){const e=[...this._formEl.querySelectorAll(this._settings.inputSelector)],t=this._formEl.querySelector(this._settings.submitButtonSelector);e.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(e,t)}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._initialArray=s,this._container=document.querySelector(t),this._renderer=r}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class r{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._handleButtonClose=this._handleButtonClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this),this._closeButton=this._popup.querySelector(".popup__close"),this._formList=[...this._popup.querySelectorAll(".popup__form")]}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleButtonClose(){this.close()}_handleOverlayClose(e){e.target===this._popup&&this.close()}open(){this._setEventListeners(),this._popup.classList.add("popup_open")}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keyup",this._handleEscClose),this._closeButton.removeEventListener("mouseup",this._handleButtonClose),this._popup.removeEventListener("mouseup",this._handleOverlayClose)}_setEventListeners(){document.addEventListener("keyup",this._handleEscClose),this._closeButton.addEventListener("mouseup",this._handleButtonClose),this._popup.addEventListener("mouseup",this._handleOverlayClose)}}class n extends r{constructor(e,t){var s,r;super(e),r=()=>{const e=this._getInputValues();this._handleFormSubmit(e,this._button)},(s="_handleSubmitClick")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._handleFormSubmit=t,this._formList=[...this._popup.querySelectorAll(".popup__form")],this._formEl=this._popup.querySelector(".popup__form"),this._button=this._popup.querySelector(".popup__button"),this._buttonOriginalText=this._button.textContent}_getInputValues(){const e=[...this._popup.querySelectorAll(".popup__info")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}_setEventListeners(){this._formList.forEach((e=>{e.addEventListener("submit",this._handleSubmitClick)})),super._setEventListeners()}close(){super.close(),this._formEl.removeEventListener("submit",this._handleSubmitClick)}renderLoading(e,t){e?(this._button.disabled=!0,this._button.textContent=t):this._button.textContent=this._buttonOriginalText}}const i=document.querySelector(".profile__edit-icon"),o=document.querySelector(".profile__add-icon"),a=document.querySelector("#popup"),l=document.querySelector(".popup_picture"),h=document.querySelector(".popup_profile-pic"),c=document.querySelector("#form-field-author"),u=document.querySelector("#form-field-picture"),d=document.querySelector("#popup-name"),_=document.querySelector("#popup-title"),p=document.querySelector("#popup-profile-pic-url"),m=document.querySelector(".profile__pic-edit"),v=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}initialize(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}_handleFetchResponse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return fetch("".concat(this._baseUrl).concat(e),{method:t,headers:this._headers,body:s}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitialCards(){return this._handleFetchResponse("/cards")}getUserInfo(){return this._handleFetchResponse("/users/me")}editUserProfile(e){const t=JSON.stringify({name:e.name,about:e.about});return this._handleFetchResponse("/users/me","PATCH",t)}addNewCard(e){const t=JSON.stringify({name:e.name,link:e.link});return this._handleFetchResponse("/cards","POST",t)}getCardLikeInfo(){return this._handleFetchResponse("/cards")}deleteCard(e){return this._handleFetchResponse("/cards/".concat(e),"DELETE")}addLike(e){return this._handleFetchResponse("/cards/likes/".concat(e),"PUT")}removeLike(e){return this._handleFetchResponse("/cards/likes/".concat(e),"DELETE")}editProfilePic(e){const t=JSON.stringify({avatar:e.avatar});return this._handleFetchResponse("/users/me/avatar","PATCH",t)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"1384428a-b01c-46ae-afda-f222b9d7dc7d","Content-Type":"application/json"}});function S(e,t,s){"remove"===t?v.removeLike(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{alert(e)})):v.addLike(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{alert(e)}))}function b(e){const t=new class{constructor(e,t,s,r,n,i){this._imageLink=e.link,this._text=e.name,this._likes=e.likes,this._currentUserId=n,this._ownerId=e.owner._id,this._cardId=e._id,this._cardSelector=t,this._handleCardClick=s,this._handleTrashButton=r,this._handleLikeClick=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCardId(){return this._cardId}updateLikes(e){this._likes=e,this._renderLikes()}_renderLikes(){this._isLiked()?this._handleLike(this._heartButton,"liked"):this._handleLike(this._heartButton,"notLiked")}_setEventListeners(){this._heartButton.addEventListener("mouseup",(()=>{this._heartButton.classList.contains("card__heart_active")?this._handleLikeClick(this._cardId,"remove",this):this._handleLikeClick(this._cardId,"add",this)})),this._trashButton&&this._trashButton.addEventListener("mouseup",(()=>{this._handleTrashButton(this)})),this._cardImage.addEventListener("mouseup",(e=>{this._handleCardClick(e.target)}))}_isLiked(){return this._likes.some((e=>e._id===this._currentUserId))}_handleLike(e,t){this._likeCount.textContent=this._likes.length,"liked"===t?e.classList.add("card__heart_active"):e.classList.remove("card__heart_active")}deleteCard(){this._cardElement.remove(),this._cardElement=null}createCard(){this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__img");const e=this._cardElement.querySelector(".card__place");return this._likeCount=this._cardElement.querySelector(".card__like-count"),this._trashButton=this._cardElement.querySelector(".card__trash"),this._heartButton=this._cardElement.querySelector(".card__heart"),this._cardImage.alt=this._text,this._cardImage.src=this._imageLink,e.textContent=this._text,this._ownerId!==this._currentUserId&&(this._trashButton.remove(),this._trashButton=null),this._setEventListeners(),this._renderLikes(),this._cardElement}}(e,"#card",L,C,U,S).createCard();y.addItem(t)}const f=new n(".popup_picture",(e=>{f.renderLoading(!0,"Creating..."),v.addNewCard(e).then((e=>{!function(e){b(e)}(e),f.close()})).catch((e=>{alert(e)})).finally((()=>{f.renderLoading(!1,"Creating...")}))})),E=new class extends r{constructor(e){super(e)}open(e){const t=this._popup.querySelector(".popup__picture");t.src=e.src,t.alt=e.alt,this._popup.querySelector(".popup__popup-caption").textContent=e.alt,super.open()}}("#picture-popup");function L(e){E.open(e)}const g=new class extends r{constructor(e){super(e),this._button=this._popup.querySelector(".popup__button"),this._buttonOriginalText=this._button.textContent}setSubmit(e){this._handleFormSubmit=e}close(){super.close(),this._button.removeEventListener("mouseup",this._handleFormSubmit)}open(){super.open(),this._button.addEventListener("mouseup",this._handleFormSubmit)}renderLoading(e,t){e?(this._button.disabled=!0,this._button.textContent=t):this._button.textContent=this._buttonOriginalText}}(".popup_delete");function C(e){g.setSubmit((()=>{g.renderLoading(!0,"Saving..."),v.deleteCard(e.getCardId()).then((()=>{e.deleteCard(),g.close()})).catch((e=>{alert(e)})).finally((()=>{g.renderLoading(!1,"Saving...")}))})),g.open()}let y=null;const k=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._nameSlot=document.querySelector(t),this._jobSlot=document.querySelector(s),this._avatarSlot=document.querySelector(r)}getUserInfo(){return{name:this._nameSlot.textContent,about:this._jobSlot.textContent,avatar:this._avatarSlot.src}}setUserInfo(e){this._nameSlot.textContent=e.name,this._jobSlot.textContent=e.about,this._avatarSlot.alt="".concat(e.name,"'s headshot"),this._avatarSlot.src=e.avatar}setUserAvatar(e){this._avatarSlot.src=e.avatar}}({nameSelector:".profile__name",jobSelector:".profile__title",avatarSelector:".profile__pic"}),I=new n("#popup",((e,t)=>{I.renderLoading(!0,"Saving"),v.editUserProfile(e).then((e=>{k.setUserInfo(e),console.log("closed")})).catch((e=>{alert(e)})).finally((()=>{I.renderLoading(!1,"Saving")}))})),q=new n(".popup_profile-pic",((e,t)=>{q.renderLoading(!0,"Saving..."),v.editProfilePic(e).then((e=>{k.setUserAvatar(e)})).catch((e=>{alert(e)})).finally((()=>{q.renderLoading(!1,"Saving...")}))})),B=new t(e,a);B.enableValidator();const x=new t(e,l);x.enableValidator();const w=new t(e,h);w.enableValidator(),o.addEventListener("mouseup",(function(){u.reset(),x.resetValidation(),f.open()})),i.addEventListener("mouseup",(function(){c.reset(),function(){const e=k.getUserInfo();d.value=e.name,_.value=e.about}(),B.resetValidation(),I.open()})),m.addEventListener("mouseup",(function(){p.value=k.getUserInfo().avatar,w.resetValidation(),q.open()}));let U=null;v.initialize().then((e=>{let[t,r]=e;U=t._id,y=new s({items:r,renderer:b},".cards__container"),y.renderItems(),k.setUserInfo(t)})).catch((e=>{alert(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,