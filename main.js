!function(){"use strict";const e={inputSelector:".popup__info",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__info_type_error",errorClass:"popup__error_visible"};var t=class{constructor(e,t){var s,r;r=e=>e.some((e=>!e.validity.valid)),(s="_hasInvalidInput")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._settings=e,this._formEl=t}_setEventListeners(e,t){e.forEach((s=>{s.addEventListener("input",(()=>{this._checkInputValidity(s),this._toggleButtonState(e,t)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e,t){this._hasInvalidInput(e)?t.disabled=!0:t.disabled=!1}_showInputError(e){e.classList.add(this._settings.inputErrorClass);const t=e.validationMessage,s=e.id,r=this._formEl.querySelector("#".concat(s,"-error"));r.textContent=t,r.classList.add(this._settings.errorClass)}_hideInputError(e){e.classList.remove(this._settings.inputErrorClass);const t=e.id,s=this._formEl.querySelector("#".concat(t,"-error"));s.textContent="",s.classList.remove(this._settings.errorClass)}enableValidator(){const e=[...this._formEl.querySelectorAll(this._settings.inputSelector)],t=this._formEl.querySelector(this._settings.submitButtonSelector);this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(e,t)}resetValidation(){const e=[...this._formEl.querySelectorAll(this._settings.inputSelector)],t=this._formEl.querySelector(this._settings.submitButtonSelector);e.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(e,t)}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._initialArray=s,this._container=document.querySelector(t),this._renderer=r}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.append(e)}}class r{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._handleButtonClose=this._handleButtonClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this),this._closeButton=this._popup.querySelector(".popup__close"),this._formList=[...this._popup.querySelectorAll(".popup__form")]}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleButtonClose(){this.close()}_handleOverlayClose(e){e.target===this._popup&&this.close()}open(){this._setEventListeners(),this._popup.classList.add("popup_open")}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keyup",this._handleEscClose),this._closeButton.removeEventListener("keyup",this._handleButtonClose),this._popup.removeEventListener("keyup",this._handleOverlayClose)}_setEventListeners(){document.addEventListener("keyup",this._handleEscClose),this._closeButton.addEventListener("mouseup",this._handleButtonClose),this._popup.addEventListener("mouseup",this._handleOverlayClose)}}class o extends r{constructor(e,t){var s,r;super(e),r=()=>{const e=this._getInputValues();this._button=this._popup.querySelector(".popup__button"),this._handleFormSubmit(e,this._button),this.close()},(s="_handleSubmitClick")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._handleFormSubmit=t,this._formList=[...this._popup.querySelectorAll(".popup__form")],this._formEl=this._popup.querySelector(".popup__form")}_getInputValues(){const e=[...this._popup.querySelectorAll(".popup__info")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}_setEventListeners(){this._formList.forEach((e=>{e.addEventListener("submit",this._handleSubmitClick)})),super._setEventListeners()}close(){super.close(),this._formEl.removeEventListener("submit",this._handleSubmitClick)}}const n=document.querySelector(".profile__edit-icon"),i=document.querySelector(".profile__add-icon"),a=document.querySelector("#popup"),l=document.querySelector(".popup_picture"),c=document.querySelector(".popup_profile-pic"),h=document.querySelector("#form-field-author"),u=document.querySelector("#form-field-picture"),d=document.querySelector("#popup-name"),_=document.querySelector("#popup-title"),p=document.querySelector("#popup-profile-pic-url"),m=document.querySelector(".profile__pic-edit"),v=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}initialize(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}_handleFetchResponse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET";return fetch("".concat(this._baseUrl).concat(e),{method:t,headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitialCards(){return this._handleFetchResponse("/cards")}getUserInfo(){return this._handleFetchResponse("/users/me")}editUserProfile(e){return fetch("https://around.nomoreparties.co/v1/group-12/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}addNewCard(e){return fetch("https://around.nomoreparties.co/v1/group-12/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getCardLikeInfo(){return this._handleFetchResponse("/cards")}deleteCard(e){return this._handleFetchResponse("/cards/".concat(e),"DELETE")}addLike(e){return this._handleFetchResponse("/cards/likes/".concat(e),"PUT")}removeLike(e){return this._handleFetchResponse("/cards/likes/".concat(e),"DELETE")}editProfilePic(e){return fetch("https://around.nomoreparties.co/v1/group-12/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"1384428a-b01c-46ae-afda-f222b9d7dc7d","Content-Type":"application/json"}});function S(e,t){"remove"===t?v.removeLike(e):v.addLike(e)}function f(e){const t=new class{constructor(e,t,s,r,o,n){this._imageLink=e.link,this._text=e.name,this._likes=e.likes,this._currentUserId=o,this._ownerId=e.owner._id,this._cardId=e._id,this._cardSelector=t,this._handleCardClick=s,this._handleTrashButton=r,this._handleLikeClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCardId(){return this._cardId}_setEventListeners(){this._heartButton.addEventListener("mouseup",(e=>{this._heartButton.classList.contains("card__heart_active")?(this._handleLikeClick(this._cardId,"remove"),this._likeCount.textContent--):(this._handleLikeClick(this._cardId,"add"),this._likeCount.textContent++),this._handleLike(e.target)})),this._trashButton&&this._trashButton.addEventListener("mouseup",(()=>{this._handleTrashButton(this)})),this._cardImage.addEventListener("mouseup",(e=>{this._handleCardClick(e.target)}))}_handleLike(e){e.classList.toggle("card__heart_active")}deleteCard(){this._cardElement.remove(),this._cardElement=null}createCard(){this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__img");const e=this._cardElement.querySelector(".card__place");return this._likeCount=this._cardElement.querySelector(".card__like-count"),this._trashButton=this._cardElement.querySelector(".card__trash"),this._heartButton=this._cardElement.querySelector(".card__heart"),this._likeCount.textContent=this._likes.length,this._cardImage.alt=this._text,this._cardImage.src=this._imageLink,e.textContent=this._text,this._ownerId!==this._currentUserId&&(this._trashButton.remove(),this._trashButton=null),this._setEventListeners(),this._likes.forEach((e=>{e._id===this._currentUserId&&this._handleLike(this._heartButton)})),this._cardElement}}(e,"#card",y,g,U,S).createCard();L.addItem(t)}const E=new o(".popup_picture",(e=>{v.addNewCard(e).then((e=>{!function(e){f(e)}(e)})).catch((e=>{alert(e)}))})),C=new class extends r{constructor(e){super(e)}open(e){const t=this._popup.querySelector(".popup__picture");t.src=e.src,t.alt=e.alt,this._popup.querySelector(".popup__popup-caption").textContent=e.alt,super.open()}}("#picture-popup");function y(e){C.open(e)}const b=new class extends r{constructor(e){super(e),this._button=this._popup.querySelector(".popup__button")}setSubmit(e){this.handleFormSubmit=e}close(){super.close(),this._button.removeEventListener("mouseup",this.handleFormSubmit)}open(){super.open(),this._button.addEventListener("mouseup",this.handleFormSubmit)}}(".popup_delete");function g(e){b.setSubmit((t=>{v.deleteCard(e.getCardId()).then((()=>{e.deleteCard(),b.close()})).catch((e=>{alert(e)}))})),b.open()}let L=null;const k=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._nameSlot=document.querySelector(t),this._jobSlot=document.querySelector(s),this._avatarSlot=document.querySelector(r)}getUserInfo(){return{name:this._nameSlot.textContent,about:this._jobSlot.textContent,avatar:this._avatarSlot.src}}setUserInfo(e){this._nameSlot.textContent=e.name,this._jobSlot.textContent=e.about,this._avatarSlot.alt="".concat(e.name,"'s headshot"),this._avatarSlot.src=e.avatar}setUserAvatar(e){this._avatarSlot.src=e.avatar}}({nameSelector:".profile__name",jobSelector:".profile__title",avatarSelector:".profile__pic"}),I=new o("#popup",((e,t)=>{P(t),v.editUserProfile(e).then((e=>{k.setUserInfo(e)})).catch((e=>{alert(e)}))})),q=new o(".popup_profile-pic",((e,t)=>{P(t),v.editProfilePic(inputValues).then((e=>{k.setUserAvatar(e)})).catch((e=>{alert(e)}))})),B=new t(e,a);B.enableValidator();const w=new t(e,l);w.enableValidator();const x=new t(e,c);let U;function P(e){e.textContent=e.textContent.replace("e","ing..."),console.log(e.textContent)}x.enableValidator(),i.addEventListener("mouseup",(function(){u.reset(),w.resetValidation(),E.open()})),n.addEventListener("mouseup",(function(){h.reset(),function(){const e=k.getUserInfo();d.value=e.name,_.value=e.about}(),B.resetValidation(),I.open()})),m.addEventListener("mouseup",(function(){p.value=k.getUserInfo().avatar,x.resetValidation(),q.open()})),v.initialize().then((e=>{let[t,r]=e;U=t._id,L=new s({items:r,renderer:f},".cards__container"),L.renderItems(),k.setUserInfo(t)})).catch((e=>{alert(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,